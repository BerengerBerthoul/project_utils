import sys
import os
import ast

# retrieve information from file generated by cmake
cmake_vars_file = sys.argv[1]
cmake_vars_file_dir = os.path.dirname(cmake_vars_file)

with open(cmake_vars_file, 'r') as f:
  cmake_vars = ast.literal_eval(f.read())

# extract cmake variables
project_name = cmake_vars["PROJECT_NAME"]
install_path = cmake_vars["CMAKE_INSTALL_PREFIX"]
dependency_string = cmake_vars["DEPENDENCIES_STRING"]
thirdparty_dependency_string = cmake_vars["THIRDPARTY_DEPENDENCIES_STRING"]
cxx_release = cmake_vars["CMAKE_CXX_FLAGS_RELEASE"]
defs = cmake_vars["COMPILE_DEFS"]

# additional parsing
defs_list = defs.strip().split(",")
defs_string = ""
if defs_list != ['']:
  for definition in defs_list:
    key,val = definition.split("=")
    defs_string += "'"+key+"'" + " : " + "'"+val+"', "


dep_string = ""
for dep in dependency_string:
  dep_name = dep.split(" ")[0]
  dep_string += "'"+dep_name+"', "
for dep in thirdparty_dependency_string:
  dep_name = dep.split(" ")[0]
  dep_string += "'"+dep_name+"', "


# source
source_string = ""
source_string += "export LD_LIBRARY_PATH="+install_path+"/lib:$LD_LIBRARY_PATH\n"
source_string += "export PYTHONPATH="+install_path+"/lib:$PYTHONPATH\n"
source_string += "export PYTHONPATH="+install_path+"/py:$PYTHONPATH\n"

with open(cmake_vars_file_dir+"/source_"+project_name+".sh", 'w') as f:
  f.write(source_string)

# ini file
ini_string = "["+project_name+"]\n"
ini_string += "libs = ['"+project_name+"']\n"
ini_string += "uses = ["+dep_string+"]\n"
ini_string += "cxx_release = ['"+cxx_release+"']\n"
ini_string += "defs = {"+defs_string+"}\n"
ini_string += "paths    = ['"+install_path+"']\n"
ini_string += "binpaths = ['"+install_path+"/bin']\n"
ini_string += "incpaths = ['"+install_path+"/include']\n"
ini_string += "libpaths = ['"+install_path+"/lib']\n"
ini_string += "pypaths  = ['"+install_path+"/py']\n"

with open(cmake_vars_file_dir+"/config_"+project_name+".ini", 'w') as f:
  f.write(ini_string)
